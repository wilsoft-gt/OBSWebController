{"version":3,"sources":["redux/scenePreviewDucks.js","redux/scenesDucks.js","redux/RecordingDucks.js","redux/streamStatusDucks.js","redux/alertDucks.js","redux/connectDucks.js","redux/ThemeDucks.js","redux/configureStore.js","components/Notification.jsx","components/SettingsComponent.jsx","views/LoginView.jsx","components/ScenesList.jsx","components/Preview.jsx","components/RecordingComponent.jsx","components/StreamingComponent.jsx","views/ControlerView.jsx","views/Main.jsx","App.js","index.js"],"names":["fetchInterval","SCENES_FETCH","SCENES_ERROR","PREVIEW_IMAGE_FETCH","PREVIEW_IMAGE_ERROR","FetchScenePreview","obs","dispatch","a","setInterval","send","embedPictureFormat","width","then","data","type","payload","catch","e","clearInterval","undefined","Disconnect","console","log","RECORDING_STATS_FETCH","RECORDING_LOADING","RECORDING_ERROR","RECORDING_STATS_STOP","getRecordingStats","res","STREAMING_STATS","STREAMING_LOADING","STREAMING_ERROR","STREAMING_STOP","ERROR_OPEN","ERROR_CLOSE","isRecording","displayAlert","OBSWebSocket","OBS_CONNECT","OBS_DISCONNECT","OBS_ERROR","disconnect","message","startStopRecording","startStopStreaming","SET_THEME","themes","dark","rainbow","palette","mainBackground","brand","success","error","warning","light","rootReducer","combineReducers","obsReducer","state","isLoading","isConnected","action","scenesReducer","store","previewReducer","image","recordingReducer","streamReducer","alertReducer","isOpen","title","description","icon","themeReducer","darkMode","theme","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","Alerts","alerts","useSelector","useDispatch","className","onRequestClose","SettingsComponent","connected","src","alt","style","height","href","target","faSun","size","value","onChange","faMoon","variant","onClick","faTimesCircle","LoginView","useState","address","setAddress","isModalOpen","setIsModalOpen","faPlug","backgroundColor","actions","faCog","isCentered","label","connect","on","Connect","ScenesComponents","pickerValue","setPickerValue","useEffect","currentScene","scenes","id","name","map","scene","index","marginBottom","faPhotoVideo","PreviewComponent","img","RecordingComponent","stats","faCircle","color","recordTimecode","recordingFilename","slice","lastIndexOf","length","faStopCircle","faDotCircle","StreamingComponent","fps","faSatelliteDish","Math","floor","streamTimecode","kbitsPerSec","numDroppedFrames","numTotalFrames","parseFloat","memoryUsage","toFixed","cpuUsage","ControllerView","onResize","innerWidth","screenWidth","setScreenWidth","tabSelection","setTabSelection","isSettingsOpen","setSettingsOpen","addEventListener","fullWidth","onSelect","selected","activeTabName","MainView","App","createStore","applyMiddleware","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.75aac4cc.chunk.js","sourcesContent":["/* imports */\n\nimport {Disconnect} from \"./connectDucks\"\nlet fetchInterval\n\n/*Action types*/\nexport const PREVIEW_IMAGE_FETCH = 'PREVIEW_IMAGE_FETCH'\nexport const PREVIEW_IMAGE_ERROR = 'PREVIEW_IMAGE_ERROR'\n\n/*Reducer*/\nexport default function previewReducer(state={\n\tisLoading: true,\n\timage: null,\n\terror: null\n}, action) {\n\tswitch(action.type) {\n\t\tcase PREVIEW_IMAGE_FETCH:\n\t\t\treturn {...state, isLoading: false, image: action.payload, error: null}\n\t\tcase PREVIEW_IMAGE_ERROR:\n\t\t\treturn {...state, isLoading: false, image: null, error: action.payload}\n\t\tdefault:\n\t\t\treturn state \n\t}\n}\n\n\n/*Actions*/\n\nexport const FetchScenePreview = (obs) =>  async(dispatch) => {\t\n\ttry {\n\t\tfetchInterval = setInterval(() => {\n\t\t\tobs.send('TakeSourceScreenshot', {embedPictureFormat: 'jpeg', width: 800}).then(data => {\t\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: PREVIEW_IMAGE_FETCH,\n\t\t\t\t\tpayload: data\n\t\t\t\t})\t\n\t\t\t}).catch(e => {\n\t\t\t\tclearInterval(fetchInterval)\n\t\t\t\tfetchInterval = undefined\n\t\t\t\tdispatch(Disconnect())\n\t\t\t})\n\t\t}, 1000)\n\t}\n\tcatch(e){\n\t\tconsole.log('catched on FetchScenePreview function'+e)\t\n\t\tdispatch({\n\t\t\ttype: PREVIEW_IMAGE_ERROR,\n\t\t\tpayload: e\n\t\t})\n\t}\n}\n","/* Imports */\n\n\n/* Action Types */\nexport const SCENES_FETCH = 'SCENES_FETCH'\nexport const SCENES_ERROR = 'SCENES_ERROR'\n\n\n/*Reducer*/\n\nexport default function (store={\n\tisLoading: true,\n\tdata: [],\n\terror: null\n}, action) {\n\tswitch(action.type){\n\t\tcase SCENES_FETCH:\n\t\t\treturn {...store, isLoading: false, data: action.payload, error: null}\n\t\tcase SCENES_ERROR:\n\t\t\treturn {...store, isLoading: false, data: [], error: action.payload}\n\t\tdefault:\n\t\t\treturn store\n\t}\n}\n\n/* Actions */\nexport const FetchScenes = (obs) => async (dispatch) => {\n\ttry {\n\t\tawait obs.send('GetSceneList').then(data => {\n\t\t\tdispatch({\n\t\t\t\ttype: SCENES_FETCH,\n\t\t\t\tpayload: data\n\t\t\t})\n\t\t\treturn true \n\t\t})\n\t} catch (e) {\n\t\tconsole.log(e)\n\t\tdispatch({\n\t\t\ttype: SCENES_ERROR,\n\t\t\tpayload: e\n\t\t})\n\t}\n}\n\n\n","/* imports */\n\n/* variables */\nexport const RECORDING_STATS_FETCH = 'RECORDING_STATS_FETCH'\nexport const RECORDING_LOADING = 'STATS_LOADING'\nexport const RECORDING_ERROR = 'RECORDING_ERROR'\nexport const RECORDING_STATS_STOP = 'RECORDING_STATS_STOP'\n\n/* Reducer */\nexport default function recordingReducer(state={\n\tisLoading: false,\n\tdata: {},\n\terror: null\n}, action) {\n\tswitch(action.type) {\n\t\tcase RECORDING_LOADING:\n\t\t\treturn {...state, isLoading: true, data: {}, error: null}\n\t\tcase RECORDING_STATS_FETCH:\n\t\t\treturn {...state, isLoading: false, data: action.payload, error:null }\n\t\tcase RECORDING_STATS_STOP:\n\t\t\treturn {...state, isLoading: false, data: {}, error: null}\n\t\tcase RECORDING_ERROR:\n\t\t\treturn {...state, isLoading: false, data: {}, error: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n\n/* Actions */\n\n\nexport const getRecordingStats = (obs) => async(dispatch) => {\n\ttry{\n\t\tawait obs.send('GetRecordingStatus').then(res => {\n\t\t\tdispatch({\n\t\t\t\ttype: RECORDING_STATS_FETCH,\n\t\t\t\tpayload: res\n\t\t\t})\t\t\t\n\t\t})\n\n\t} catch(e){\t\n\t\tdispatch({\n\t\t\ttype: RECORDING_ERROR,\n\t\t\tpayload: e\n\t\t})\n\t}\n}\n","/* Imports */\n\n/* Action types */\nexport const STREAMING_STATS = 'STREAMING_STATS'\nexport const STREAMING_LOADING = 'STREAMING_LOADING'\nexport const STREAMING_ERROR = 'STREAMING_ERROR'\nexport const STREAMING_STOP = 'STREAMING_STOP'\n\n/*Reducer */\nexport default function streamingReducer(state={\n\tisLoading: false,\n\tdata: {},\n\terror: null\n}, action){\n\tswitch(action.type) {\n\t\tcase STREAMING_LOADING:\n\t\t\treturn {...state, isLoading: true, data: {}, error: null}\n\t\tcase STREAMING_STATS:\n\t\t\treturn {...state, isLoading: false, data: action.payload, error: null}\n\t\tcase STREAMING_ERROR:\n\t\t\treturn {...state, isLoading: false, data: {}, error: action.payload}\n\t\tcase STREAMING_STOP:\n\t\t\treturn {...state, isLoading: false, data: {}, error: null}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n/* Actions */\nexport const getStreamingStatus = (obs) => async (dispatch) => {\n\ttry {\n\t\tsetInterval(() => {\n\t\t\tobs.send('GetStreamingStatus').then( res => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: STREAMING_STATS,\n\t\t\t\t\tpayload: res\n\t\t\t\t})\n\t\t\t})\n\t\t} ,1000)\n\t} catch (e) {\n\t\tdispatch({\n\t\t\ttype: STREAMING_ERROR,\n\t\t\tpayload: e\n\t\t})\n\t}\n}\n","/* Imports */\n/* Action Types */\nexport const ERROR_OPEN = 'ERROR_OPEN'\nexport const ERROR_CLOSE = 'ERROR_CLOSE'\n\nexport default function alertReducer(state={\n\tisOpen: false,\n\tdata: {\n\t\ttitle: '',\n\t\tdescription: '',\n\t\ticon: ''\n\t}\n}, action) {\n\tswitch(action.type) {\n\t\tcase ERROR_OPEN:\n\t\t\treturn {...state, isOpen: true, data: action.payload}\n\t\tcase ERROR_CLOSE:\n\t\t\treturn {...state, isOpen: false, data: {title: '', description:'', icon:''} }\n\t\tdefault:\n\t\t\treturn state\n\t}\n\n}\n\n/* Actions */\nexport const displayAlert = (data) => async(dispatch) => {\n\tdispatch({\n\t\ttype: ERROR_OPEN,\n\t\tpayload: data\n\t})\n}\n\nexport const hideAlert = () => async(dispatch) => {\n\tdispatch({\n\t\ttype: ERROR_CLOSE\n\t})\n}\n","/* Imports */\r\nimport OBSWebSocket from \"obs-websocket-js\";\r\nconst obs = new OBSWebSocket();\r\n\r\nimport { FetchScenes, getSourcesList } from './scenesDucks'\r\nimport { FetchScenePreview } from './scenePreviewDucks'\r\nimport { getRecordingStats, RECORDING_STATS_STOP } from './RecordingDucks'\r\nimport { STREAMING_STATS, STREAMING_STOP } from './streamStatusDucks'\r\nimport { displayAlert } from './alertDucks'\r\n/* Action types */\r\nexport const OBS_CONNECT = \"OBS_CONNECT\";\r\nexport const OBS_DISCONNECT = \"OBS_DISCONNECT\";\r\nexport const OBS_ERROR = \"OBS_ERROR\";\r\n\r\nlet isRecording\r\n\r\n/* Reducers */\r\nexport default function ObsReducer(\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\tisConnected: false,\r\n\t\terror: null\r\n\t},\r\n\taction\r\n) {\r\n\tswitch (action.type) {\r\n\t\tcase OBS_CONNECT:\r\n\t\t\treturn { ...state, isLoading: false, isConnected: true, error: null };\r\n\r\n\t\tcase OBS_DISCONNECT:\r\n\t\t\treturn { ...state, isLoading: false, isConnected: false, error: null };\r\n\r\n\t\tcase OBS_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tisConnected: false,\r\n\t\t\t\terror: action.payload.message\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n/* Action Creators */\r\nexport const Connect = (address) => async (dispatch) => {\r\n\ttry {\r\n\t\tobs.connect({ address: `${address}:4444` }).then((e) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBS_CONNECT\r\n\t\t\t})\t\t\r\n\r\n\t\t\tdispatch(FetchScenes(obs))\r\n\t\t\tdispatch(FetchScenePreview(obs))\r\n\t\t\tobs.send('GetRecordingStatus').then( res => {\r\n\t\t\t\tif(res.isRecording) {\r\n\t\t\t\t\tisRecording = setInterval(() => dispatch(getRecordingStats(obs)), 1000)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobs.on('RecordingStarted', () => {\r\n\t\t\t\tif (!isRecording) {\r\n\t\t\t\t\tisRecording = setInterval(() => dispatch(getRecordingStats(obs)), 1000)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobs.on('RecordingStopped', () => {\r\n\t\t\t\tclearInterval(isRecording)\r\n\t\t\t\tisRecording = undefined\r\n\t\t\t\tdispatch({type: RECORDING_STATS_STOP})\r\n\t\t\t})\r\n\t\t\tobs.on('StreamStatus', res => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: STREAMING_STATS,\r\n\t\t\t\t\tpayload: res\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t})\r\n\t\t\tobs.on('StreamStopped', () => {\r\n\t\t\t\tdispatch({type: STREAMING_STOP})\r\n\t\t\t\tconsole.log('stream stop')\r\n\t\t\t})\r\n\t\t\tobs.on('ConnectionClosed', () => {\r\n\t\t\t\tdispatch(displayAlert({title: 'Disconnected', description: 'The connection has been closed', icon:'warning'}))\r\n\t\t\t\tdispatch({type: OBS_DISCONNECT})\r\n\t\t\t})\r\n\t\t\tobs.on('error', (e) => {\r\n\t\t\t\tdispatch(displayAlert({title:e.error, description:e.description, icon:'error'}))\r\n\t\t\t})\r\n\t\t}).catch( e => {\r\n\t\t\tconsole.log(e)\r\n\t\t\tdispatch(displayAlert({title:e.error, description:e.description, icon:'error'}))\r\n\t\t\treturn e\r\n\t\t})\r\n\t} catch (e) {\t\t\r\n\t\tconsole.log('Catched on Connect function'+e);\r\n\t\tdispatch({\r\n\t\t\ttype: OBS_ERROR,\r\n\t\t\tpayload: e\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const Disconnect = () => async (dispatch) => {\r\n\ttry {\r\n\t\tobs.disconnect()\r\n\t\tdispatch({type: OBS_DISCONNECT})\r\n\t} catch (e){\r\n\t\tconsole.log('Catched on Disconnect function'+e)\r\n\t\tdispatch({\r\n\t\t\ttype: OBS_ERROR,\r\n\t\t\tpayload: e.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const setCurrentScene = (name) => async(dispatch) => {\r\n\ttry {\r\n\t\tawait obs.send('SetCurrentScene', {'scene-name': name})\r\n\t\t\t.then(e => console.log(e))\r\n\t} catch(e){\r\n\t\tconsole.log('Catched on setCurrentScene function'+e)\r\n\t}\r\n}\r\n\r\nexport const startStopRecording = () => async (dispatch) => {\r\n\ttry{\r\n\t\tawait obs.send('StartStopRecording')\r\n\t} catch (e) {\r\n\t\tconsole.log('catched on startStopRecording function '+e)\r\n\t}\r\n}\r\n\r\nexport const startStopStreaming = () => async (dispatch) => {\r\n\ttry {\r\n\t\tawait obs.send('StartStopStreaming')\r\n\t} catch (e) {\r\n\t\tconsole.log('Catched on startStopStreaming function'+e)\r\n\t}\r\n}\r\n","export const SET_THEME = 'SET_THEME'\n\nconst themes = {\n\tdark: {\n\t\trainbow: {\n\t\t\tpalette: {\n\t\t\t\tmainBackground: '#212121',\n\t\t\t\tbrand: '#885090',\n\t\t\t\tsuccess: '#82a0b9',\n\t\t\t\terror: '#C4595F',\n\t\t\t\twarning: '#e7a553'\n\t\t\t}\n\t\t}\n\t},\n\tlight: {\n\t\trainbow: {\n\t\t\tpalette: {\n\t\t\t\tmainBackground: '#fff',\n\t\t\t\tbrand: '#01B6F5',\n\t\t\t\tsuccess: '#1DE9B6',\n\t\t\t\terror: '#FE4849',\n\t\t\t\twarning: '#FC0'\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nexport default function themeReducer (\n\tstate={\n\t\tdarkMode: false,\n\t\ttheme: themes['light']\n\t},\n\taction\n) {\n\tswitch(action.type) {\n\t\tcase SET_THEME:\n\t\t\treturn {...state, darkMode: action.payload, theme: themes[ action.payload ? 'dark' : 'light']}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const setTheme = (darkMode) => async (dispatch) => {\n\tdispatch({\n\t\ttype: SET_THEME,\n\t\tpayload: darkMode\n\t})\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from 'redux-logger'\r\nimport obsReducer from \"./connectDucks\";\r\nimport scenesReducer from \"./scenesDucks\"\r\nimport previewReducer from './scenePreviewDucks'\r\nimport recordingReducer from './RecordingDucks'\r\nimport streamingReducer from './streamStatusDucks'\r\nimport alertReducer from './alertDucks'\r\nimport themeReducer from './ThemeDucks'\r\n\r\nconst rootReducer = combineReducers({\r\n\tobsReducer: obsReducer,\r\n\tscenesReducer: scenesReducer,\r\n\tpreviewReducer: previewReducer,\r\n\trecordingReducer: recordingReducer,\r\n\tstreamReducer: streamingReducer,\r\n\talertReducer: alertReducer,\r\n\tthemeReducer: themeReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet middleware = [thunk]\r\n\r\nif (process.env.NODE_ENV !== 'production' ) {\r\n\tmiddleware.push(logger)\t\r\n}\r\n\r\nexport default function GenerateStore() {\r\n\tconst store = createStore(\r\n\t\trootReducer,\r\n\t\tcomposeEnhancers(applyMiddleware(...middleware))\r\n\t);\r\n\treturn store;\r\n}\r\n","import React from 'react'\nimport { Notification } from 'react-rainbow-components'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { hideAlert } from '../redux/alertDucks'\n\nexport const Alerts = () => {\n\tconst alerts = useSelector(store => store.alertReducer)\n\tconst dispatch = useDispatch()\n\tif (alerts && alerts.isOpen) {\n\t\treturn (\n\t\t\t<Notification\n\t\t\t\tclassName='alert'\n\t\t\t\ttitle={alerts.data.title}\n\t\t\t\tdescription={alerts.data.description}\n\t\t\t\ticon={alerts.data.icon}\n\t\t\t\tonRequestClose={() => dispatch(hideAlert())}\n\t\t\t/>\n\t\t)\n\t} else {\n\t\treturn null\n\t}\n}\n","import React from 'react'\nimport { Button, CheckboxToggle } from 'react-rainbow-components'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Disconnect } from '../redux/connectDucks.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle, faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\nimport {setState, setTheme } from '../redux/ThemeDucks'\n\nexport const SettingsComponent = () => {\n\tconst dispatch = useDispatch()\n\tconst theme = useSelector(store => store.themeReducer)\n\tconst connected = useSelector(state => state.obsReducer.isConnected)\n\treturn(\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<img src=\"icon.png\" alt=\"obs icon\" style={{width:'150px', height:'auto'}} />\n\t\t\t\t<h2>OBS remote controller</h2>\n\t\t\t\t<p>Developed by <a href=\"https://github.com/wilsoft-gt\" target=\"_blank\">wilsoft-gt</a></p>\n\t\t\t\t<p>You can check the source code on <a href=\"https://github.com/wilsoft-gt/OBSWebController\" target=\"_blank\">here</a></p>\n\t\t\t</div>\t\t\n\t\t\t<div className='d-flex flex-row align-items-center justify-content-center'>\n\t\t\t\t<FontAwesomeIcon icon={faSun} size='2x' />\n\t\t\t\t<CheckboxToggle \n\t\t\t\t\tclassName='margin-3'\n\t\t\t\t\tvalue={theme.darkMode}\n\t\t\t\t\tonChange={() => dispatch(setTheme(!theme.darkMode))}\n\t\t\t\t/>\n\t\t\t\t<FontAwesomeIcon icon={faMoon} size='2x'/>\n\t\t\t</div>\n\t\t\t{connected && <Button variant='destructive' onClick={() => dispatch(Disconnect())}>\n\t\t\t\t<FontAwesomeIcon icon={faTimesCircle} className='margin-r-05' />\n\t\t\t\tDisconnect\n\t\t\t</Button>}\n\t\t</div>\n\t)\n}\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Application, Card, Button, ButtonIcon, Input, Avatar } from 'react-rainbow-components'\r\nimport { Alerts } from '../components/Notification'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlug, faCog } from '@fortawesome/free-solid-svg-icons'\r\nimport { Connect } from \"../redux/connectDucks\";\r\nimport { SettingsComponent } from '../components/SettingsComponent'\r\n\r\nexport const LoginView = () => {\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\r\n\tconst dispatch = useDispatch();\r\n\tconst theme = useSelector(store => store.themeReducer)\r\n\tconst handleConnection = () => {\r\n\t\tdispatch(Connect(address))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Application theme={theme.theme}>\r\n\t\t\t<Modal \r\n\t\t\t\tisOpen={isModalOpen}\r\n\t\t\t\tonRequestClose={() => setIsModalOpen(!isModalOpen)}\r\n\t\t\t\ttitle='Info'\r\n\t\t\t\ticon={<FontAwesomeIcon icon={faPlug} />}\r\n\t\t\t>\r\n\t\t\t\t<SettingsComponent />\r\n\t\t\t</Modal>\r\n\t\t\t<article style={{backgroundColor: theme.theme.rainbow.palette.mainBackground}} className='d-flex flex-column justify-content-center vh-100 align-items-center'>\r\n\t\t\t\t<Alerts />\r\n\t\t\t\t<Card \r\n\t\t\t\t\tclassName='w-50'\r\n\t\t\t\t\ttitle='Connect'\r\n\t\t\t\t\ticon={<Avatar variant='success' icon={<FontAwesomeIcon icon={faPlug} />} />}\r\n\t\t\t\t\tactions={\r\n\t\t\t\t\t\t<ButtonIcon variant='success' icon={<FontAwesomeIcon icon={faCog} onClick={() => setIsModalOpen(!isModalOpen) }/>}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className='w-100 d-flex flex-column align-items-center'>\r\n\t\t\t\t\t\t<div className='w-50 d-flex flex-column margin-3'>\r\n\t\t\t\t\t\t\t<Input className='address-input' value={address} isCentered label='Host address' onChange={e => setAddress(e.target.value)} /> \r\n\t\t\t\t\t\t\t<Button variant='brand' onClick={handleConnection}>Connect</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t</article>\r\n\t\t</Application>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { VisualPicker, VisualPickerOption, Spinner, Card } from 'react-rainbow-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPhotoVideo } from '@fortawesome/free-solid-svg-icons'\nimport { setCurrentScene } from '../redux/connectDucks'\n\nexport const ScenesComponents = () => {\n\tconst data = useSelector(store => store.scenesReducer.data)\n\tconst [pickerValue, setPickerValue ] = useState('')\n\tconst dispatch = useDispatch()\n\tconst handlePickerValue = (value) => {\n\t\tsetPickerValue(value)\n\t\tdispatch(setCurrentScene(value))\n\t}\n\n\tuseEffect(() => {\n\t\tsetPickerValue(data.currentScene)\t\n\t}, [data])\n\n\tif (data.scenes === undefined) {\n\t\treturn <Spinner size='large' type='arc' variant='brand'/> \n\t} else {\n\t\treturn(\n\t\t\t<div className='h-100 overflow-auto'>\n\t\t\t\t<VisualPicker \n\t\t\t\t\tid='visual-picker'\t\n\t\t\t\t\tvalue={pickerValue}\n\t\t\t\t\tonChange={handlePickerValue}\n\t\t\t\t\tclassName='overflow-auto'\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tdata.scenes.map((scene, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<VisualPickerOption key={index} name={scene.name}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon style={{marginBottom: '0.25em'}} icon={faPhotoVideo} size='3x' />\n\t\t\t\t\t\t\t\t\t{scene.name}\n\t\t\t\t\t\t\t\t</VisualPickerOption>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</VisualPicker>\n\t\t\t</div>\n\t\t)\n\n\t}\n}\n","import React from 'react'\nimport { Card, Spinner } from 'react-rainbow-components'\nimport { useSelector } from 'react-redux'\n\n\nexport const PreviewComponent = () => {\n\n\tconst image = useSelector(store => store.previewReducer)\n\n\n\tif (image.isLoading){\n\t\treturn <Spinner size='large' variant='brand' type='arc' />\n\n\t} else if (image.error) {\n\t\treturn <h3>{image.error.description}</h3>\n\t} else {\n\t\treturn(\n\t\t\t<div className='d-flex flex-column justify-content-center align-items-center'>\n\t\t\t\t<img className='prev-img' src={image.image.img} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport { startStopRecording } from '../redux/connectDucks'\nimport { Card, Button } from 'react-rainbow-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDotCircle, faCircle, faStopCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const RecordingComponent = () => {\n\tconst stats = useSelector(store =>  store.recordingReducer)\n\tconst dispatch = useDispatch()\n\n\tif (stats.data && stats.data.isRecording) {\n\t\treturn(\t\n\t\t\t<div className='flex-grow-1'>\n\t\t\t\t<p><FontAwesomeIcon icon={faCircle} className='breathingAnimation margin-r-05' style={{color: 'red'}}/> Recording </p>\n\t\t\t\t<p>Time: {stats.data.recordTimecode}</p>\n\t\t\t\t<p>Filename: { stats.data.recordingFilename.slice(stats.data.recordingFilename.lastIndexOf('/')+1, stats.data.recordingFilename.length) }</p>\n\t\t\t\t<p>File Path: { stats.data.recordingFilename.slice(0, stats.data.recordingFilename.lastIndexOf('/')+1) }</p>\t\n\t\t\t\t<Button variant='destructive' onClick={() => dispatch(startStopRecording())}> \n\t\t\t\t\t<FontAwesomeIcon icon={faStopCircle} className='margin-r-1'/>\n\t\t\t\t\tStop recording\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\t\n\t} else {\n\t\treturn(\n\t\t\t<div className='d-flex flex-column flex-grow-1 align-items-center justify-content-center'>\n\t\t\t\t<Button onClick={() => dispatch(startStopRecording())} variant='brand'>\n\t\t\t\t\t<FontAwesomeIcon icon={faDotCircle} className='margin-r-1' />\n\t\t\t\t\tStart recording\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { startStopStreaming } from '../redux/connectDucks'\nimport { Button, ProgressBar, ProgressCircular } from 'react-rainbow-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSatelliteDish, faStopCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const StreamingComponent = () => {\n\tconst stats = useSelector(store => store.streamReducer)\n\tconst dispatch = useDispatch()\n\n\tif (stats && stats.data.fps) {\n\n\t\treturn(\n\t\t\t<div className='d-flex flex-column justify-content-center align-items-center flex-grow-1 w-100'>\t\n\t\t\t\t<p>\n\t\t\t\t\t<FontAwesomeIcon icon={faSatelliteDish} className='margin-r-05 breathingAnimation' style={{color: 'red'}} />\n\t\t\t\t\tLive now\t\n\t\t\t\t</p>\n\t\t\t\t<div className='d-flex flex-row justify-content-between align-items-between w-100'>\n\t\t\t\t\t<div className='text-left stats'>\n\t\t\t\t\t\t<p>FPS: {Math.floor(stats.data.fps)}</p>\n\t\t\t\t\t\t<p>Streaming time: {stats.data.streamTimecode}</p>\n\t\t\t\t\t\t<p>Bitrate: {stats.data.kbitsPerSec}kb/s</p>\n\t\t\t\t\t\t<p>Skiped Frames: {stats.data.numDroppedFrames}/{stats.data.numTotalFrames}</p>\n\t\t\t\t\t\t<p>Memory: {parseFloat(stats.data.memoryUsage).toFixed(2)}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ProgressCircular variant='warning' value={parseFloat(stats.data.cpuUsage).toFixed(1)} />\t\n\t\t\t\t\t\t<p>CPU ussage</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t<Button variant='destructive' onClick={() => dispatch(startStopStreaming())}>\n\t\t\t\t\t<FontAwesomeIcon icon={faStopCircle} className='margin-r-1' />\n\t\t\t\t\tStop Streaming\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div className='d-flex flex-column flex-grow-1 align-items-center justify-content-center'>\n\t\t\t\t<Button variant='brand' onClick={ () => dispatch(startStopStreaming()) }>\n\t\t\t\t\t<FontAwesomeIcon className='margin-r-1' icon={faSatelliteDish} />\n\t\t\t\t\tStart Sreaming\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {useState, useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport { ScenesComponents } from '../components/ScenesList'\nimport { PreviewComponent } from '../components/Preview'\nimport { RecordingComponent } from '../components/RecordingComponent'\nimport { StreamingComponent } from '../components/StreamingComponent'\nimport { SettingsComponent } from '../components/SettingsComponent'\nimport {Application, Tabset, Tab, Card, ButtonIcon, Avatar, Button, Modal } from 'react-rainbow-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSatelliteDish, faDotCircle, faPhotoVideo, faCog } from '@fortawesome/free-solid-svg-icons'\nimport { Alerts } from '../components/Notification'\n\nexport const ControllerView = () => {\n\twindow.onResize = (e) => console.log(e)\n\tconst theme = useSelector(state => state.themeReducer)\n\tconst [screenWidth, setScreenWidth ] = useState(window.innerWidth)\n\tconst [tabSelection, setTabSelection] = useState('stream')\n\tconst [isSettingsOpen, setSettingsOpen] = useState(false)\n\n\tconst getTabContent = () => {\n\t\treturn {'stream': <StreamingComponent />,\n\t\t\t'record': <RecordingComponent />,\n\t\t\t'scenes': <ScenesComponents />\n\t\t}[tabSelection]\n\t} \n\n\tuseEffect( () => {\n\t\twindow.addEventListener('resize', (e) =>{\n\t\t\tsetScreenWidth(window.innerWidth)\n\t\t})\n\t}, [])\n\n\treturn(\t\n\t\t<Application theme={theme.theme}>\n\t\t\t<Card\n\t\t\t\ticon={\n\t\t\t\t\tscreenWidth > 768 ? <Avatar size='small' src='icon.png' /> : null\n\t\t\t\t}\n\t\t\t\ttitle={screenWidth > 768 ? 'Connected' : null}\n\t\t\t\tactions={ screenWidth > 768 ?\n\t\t\t\t\t<Button variant='success' size='small' onClick={() => setSettingsOpen(true)}>\n\t\t\t\t\t\t<FontAwesomeIcon className='margin-r-05' icon={faCog} />\n\t\t\t\t\t\tSettings\n\t\t\t\t\t</Button> : null\n\t\t\t\t}\n\t\t\t\tclassName='d-flex flex-column flex-grow-1 vh-100'\n\t\t\t>\t\n\t\t\t\t<Alerts />\n\t\t\t\t<Modal \n\t\t\t\t\tisOpen={isSettingsOpen} \n\t\t\t\t\tonRequestClose={() => setSettingsOpen(false)} \n\t\t\t\t\ttitle='Settings'\n\t\t\t\t\ticon={<FontAwesomeIcon icon={faCog} />}\n\t\t\t\t>\n\t\t\t\t\t<SettingsComponent />\n\t\t\t\t</Modal>\n\t\t\t\t<PreviewComponent />\n\t\t\t\t<div className=\"d-flex flex-column flex-grow-1 overflow-auto justify-content-center align-items-center w-100\">\n\n\t\t\t\t\t<div className='d-flex flex-grow-1 overflow-auto w-75'> \n\t\t\t\t\t\t{screenWidth > 768 ?\n\t\t\t\t\t\t\t<Card title='Choose the scene' className='w-50'> \n\t\t\t\t\t\t\t\t<ScenesComponents />\n\t\t\t\t\t\t\t</Card> : '' }\n\t\t\t\t\t\t<Card className='d-flex flex-column justify-content-center align-items center w-50 flex-grow-1'>\n\t\t\t\t\t\t\t<Tabset\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tclassName='w-100'\n\t\t\t\t\t\t\t\tvariant='line'\n\t\t\t\t\t\t\t\tid='tabset'\n\t\t\t\t\t\t\t\tonSelect={ (e, selected) => setTabSelection(selected) }\n\t\t\t\t\t\t\t\tactiveTabName={tabSelection}\n\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\t\t{screenWidth < 768 ?\n\t\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\t\tname='scenes'\n\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\t<span> \n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPhotoVideo} /> Scenes\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/> : null }\n\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\tname='stream'\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSatelliteDish} /> Stream\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Tab \n\t\t\t\t\t\t\t\t\tname='record'\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t<span> \n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faDotCircle} /> Record\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tabset>\n\t\t\t\t\t\t\t{getTabContent()}\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t{ screenWidth < 768 ?\n\t\t\t\t\t<ButtonIcon className='settingsButton' variant='success' icon={<FontAwesomeIcon icon={faCog} onClick={() => setSettingsOpen(!isSettingsOpen)} />} />: \n\t\t\t\t\t\tnull \n\t\t\t\t}\n\t\t\t</Card>\n\t\t</Application>\n\t)\t\n}\n","import React from 'react'\nimport { LoginView } from './LoginView'\nimport { ControllerView } from './ControlerView'\nimport { useSelector } from 'react-redux'\nimport { Application } from 'react-rainbow-components'\nexport const MainView = () => {\n\n\n\tconst connection = useSelector(store => store.obsReducer)\n\tif (!connection.isConnected) {\n\t\treturn (\n\n\t\t\t\t<LoginView />\n\n\t\t)\n\t} else {\n\t\treturn (\n\n\t\t\t\t<ControllerView />\n\n\t\t)\n\t}\n}\n","import \"./styles.css\";\nimport GenerateStore from \"./redux/configureStore\";\nimport { Provider } from \"react-redux\";\nimport { MainView } from './views/Main'\n\nexport default function App() {\n\tconst store = GenerateStore();\n\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<MainView />\n\t\t</Provider>\n\t);\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\t<StrictMode>\n\t\t<App />\n\t</StrictMode>,\n\trootElement\n);\n"],"sourceRoot":""}