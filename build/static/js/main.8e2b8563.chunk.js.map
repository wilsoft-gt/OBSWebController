{"version":3,"sources":["redux/scenePreviewDucks.js","redux/scenesDucks.js","redux/RecordingDucks.js","redux/streamStatusDucks.js","redux/alertDucks.js","redux/connectDucks.js","redux/configureStore.js","components/Notification.jsx","views/LoginView.jsx","components/ScenesList.jsx","components/Preview.jsx","components/RecordingComponent.jsx","components/StreamingComponent.jsx","components/SettingsComponent.jsx","views/ControlerView.jsx","views/Main.jsx","App.js","index.js"],"names":["fetchInterval","SCENES_FETCH","SCENES_ERROR","PREVIEW_IMAGE_FETCH","PREVIEW_IMAGE_ERROR","FetchScenePreview","obs","dispatch","a","setInterval","send","embedPictureFormat","width","then","data","type","payload","catch","e","clearInterval","undefined","Disconnect","console","log","RECORDING_STATS_FETCH","RECORDING_LOADING","RECORDING_ERROR","RECORDING_STATS_STOP","getRecordingStats","res","STREAMING_STATS","STREAMING_LOADING","STREAMING_ERROR","STREAMING_STOP","ERROR_OPEN","ERROR_CLOSE","isRecording","displayAlert","OBSWebSocket","OBS_CONNECT","OBS_DISCONNECT","OBS_ERROR","disconnect","message","startStopRecording","startStopStreaming","rootReducer","combineReducers","obsReducer","state","isLoading","isConnected","error","action","scenesReducer","store","previewReducer","image","recordingReducer","streamReducer","alertReducer","isOpen","title","description","icon","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Alerts","alerts","useSelector","useDispatch","className","onRequestClose","LoginView","useState","address","setAddress","variant","faPlug","actions","onClick","faCog","value","isCentered","label","onChange","target","connect","on","Connect","ScenesComponents","pickerValue","setPickerValue","useEffect","currentScene","scenes","size","id","name","map","scene","index","style","marginBottom","faPhotoVideo","PreviewComponent","src","img","RecordingComponent","stats","faCircle","color","recordTimecode","recordingFilename","slice","lastIndexOf","length","faStopCircle","faDotCircle","StreamingComponent","fps","faSatelliteDish","Math","floor","streamTimecode","kbitsPerSec","numDroppedFrames","numTotalFrames","parseFloat","memoryUsage","toFixed","cpuUsage","SettingsComponent","alt","height","href","faTimesCircle","ControllerView","onResize","innerWidth","screenWidth","setScreenWidth","tabSelection","setTabSelection","isSettingsOpen","setSettingsOpen","addEventListener","fullWidth","onSelect","selected","activeTabName","MainView","App","createStore","applyMiddleware","thunk","logger","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8e2b8563.chunk.js","sourcesContent":["/* imports */\n\nimport {Disconnect} from \"./connectDucks\"\nlet fetchInterval\n\n/*Action types*/\nexport const PREVIEW_IMAGE_FETCH = 'PREVIEW_IMAGE_FETCH'\nexport const PREVIEW_IMAGE_ERROR = 'PREVIEW_IMAGE_ERROR'\n\n/*Reducer*/\nexport default function previewReducer(state={\n\tisLoading: true,\n\timage: null,\n\terror: null\n}, action) {\n\tswitch(action.type) {\n\t\tcase PREVIEW_IMAGE_FETCH:\n\t\t\treturn {...state, isLoading: false, image: action.payload, error: null}\n\t\tcase PREVIEW_IMAGE_ERROR:\n\t\t\treturn {...state, isLoading: false, image: null, error: action.payload}\n\t\tdefault:\n\t\t\treturn state \n\t}\n}\n\n\n/*Actions*/\n\nexport const FetchScenePreview = (obs) =>  async(dispatch) => {\t\n\ttry {\n\t\n\t\t\tfetchInterval = setInterval(() => {\n\t\t\t\tobs.send('TakeSourceScreenshot', {embedPictureFormat: 'jpeg', width: 800}).then(data => {\t\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: PREVIEW_IMAGE_FETCH,\n\t\t\t\t\t\tpayload: data\n\t\t\t\t\t})\t\n\t\t\t\t}).catch(e => {\n\t\t\t\t\tclearInterval(fetchInterval)\n\t\t\t\t\tfetchInterval = undefined\n\t\t\t\t\tdispatch(Disconnect())\n\t\t\t\t})\n\t\t\t}, 1000)\n\t\t\n\n\t}\n\tcatch(e){\n\t\tconsole.log('catched on FetchScenePreview function'+e)\t\n\t\tdispatch({\n\t\t\ttype: PREVIEW_IMAGE_ERROR,\n\t\t\tpayload: e\n\t\t})\n\t}\n}\n","/* Imports */\n\n\n/* Action Types */\nexport const SCENES_FETCH = 'SCENES_FETCH'\nexport const SCENES_ERROR = 'SCENES_ERROR'\n\n\n/*Reducer*/\n\nexport default function (store={\n\tisLoading: true,\n\tdata: [],\n\terror: null\n}, action) {\n\tswitch(action.type){\n\t\tcase SCENES_FETCH:\n\t\t\treturn {...store, isLoading: false, data: action.payload, error: null}\n\t\tcase SCENES_ERROR:\n\t\t\treturn {...store, isLoading: false, data: [], error: action.payload}\n\t\tdefault:\n\t\t\treturn store\n\t}\n}\n\n/* Actions */\nexport const FetchScenes = (obs) => async (dispatch) => {\n\ttry {\n\t\tawait obs.send('GetSceneList').then(data => {\n\t\t\tdispatch({\n\t\t\t\ttype: SCENES_FETCH,\n\t\t\t\tpayload: data\n\t\t\t})\n\t\treturn true \n\t})\n\n\t} catch (e) {\n\t\tconsole.log(e)\n\t\tdispatch({\n\t\t\ttype: SCENES_ERROR,\n\t\t\tpayload: e\n\t\t})\n\t}\n}\n\n\n","/* imports */\n\n/* variables */\nexport const RECORDING_STATS_FETCH = 'RECORDING_STATS_FETCH'\nexport const RECORDING_LOADING = 'STATS_LOADING'\nexport const RECORDING_ERROR = 'RECORDING_ERROR'\nexport const RECORDING_STATS_STOP = 'RECORDING_STATS_STOP'\n\n/* Reducer */\nexport default function recordingReducer(state={\n\tisLoading: false,\n\tdata: {},\n\terror: null\n}, action) {\n\tswitch(action.type) {\n\t\tcase RECORDING_LOADING:\n\t\t\treturn {...state, isLoading: true, data: {}, error: null}\n\t\tcase RECORDING_STATS_FETCH:\n\t\t\treturn {...state, isLoading: false, data: action.payload, error:null }\n\t\tcase RECORDING_STATS_STOP:\n\t\t\treturn {...state, isLoading: false, data: {}, error: null}\n\t\tcase RECORDING_ERROR:\n\t\t\treturn {...state, isLoading: false, data: {}, error: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n\n/* Actions */\n\n\nexport const getRecordingStats = (obs) => async(dispatch) => {\n\ttry{\n\t\tawait obs.send('GetRecordingStatus').then(res => {\n\t\t\tdispatch({\n\t\t\t\ttype: RECORDING_STATS_FETCH,\n\t\t\t\tpayload: res\n\t\t\t})\t\t\t\n\t\t})\n\n\t} catch(e){\t\n\t\tdispatch({\n\t\t\ttype: RECORDING_ERROR,\n\t\t\tpayload: e\n\t\t})\n\t}\n}\n","/* Imports */\n\n/* Action types */\nexport const STREAMING_STATS = 'STREAMING_STATS'\nexport const STREAMING_LOADING = 'STREAMING_LOADING'\nexport const STREAMING_ERROR = 'STREAMING_ERROR'\nexport const STREAMING_STOP = 'STREAMING_STOP'\n\n/*Reducer */\nexport default function streamingReducer(state={\n\tisLoading: false,\n\tdata: {},\n\terror: null\n}, action){\n\tswitch(action.type) {\n\t\tcase STREAMING_LOADING:\n\t\t\treturn {...state, isLoading: true, data: {}, error: null}\n\t\tcase STREAMING_STATS:\n\t\t\treturn {...state, isLoading: false, data: action.payload, error: null}\n\t\tcase STREAMING_ERROR:\n\t\t\treturn {...state, isLoading: false, data: {}, error: action.payload}\n\t\tcase STREAMING_STOP:\n\t\t\treturn {...state, isLoading: false, data: {}, error: null}\n\t\tdefault:\n\t\t\treturn state\n\n\t}\n}\n\n/* Actions */\nexport const getStreamingStatus = (obs) => async (dispatch) => {\n\ttry {\n\t\tsetInterval(() => {\n\t\t\tobs.send('GetStreamingStatus').then( res => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: STREAMING_STATS,\n\t\t\t\t\tpayload: res\n\t\t\t\t})\n\t\t\t})\n\t\t} ,1000)\n\t} catch (e) {\n\t\tdispatch({\n\t\t\ttype: STREAMING_ERROR,\n\t\t\tpayload: e\n\t\t})\n\t}\n}\n","/* Imports */\n/* Action Types */\nexport const ERROR_OPEN = 'ERROR_OPEN'\nexport const ERROR_CLOSE = 'ERROR_CLOSE'\n\nexport default function alertReducer(state={\n\tisOpen: false,\n\tdata: {\n\t\ttitle: '',\n\t\tdescription: '',\n\t\ticon: ''\n\t}\n}, action) {\n\tswitch(action.type) {\n\t\tcase ERROR_OPEN:\n\t\t\treturn {...state, isOpen: true, data: action.payload}\n\t\tcase ERROR_CLOSE:\n\t\t\treturn {...state, isOpen: false, data: {title: '', description:'', icon:''} }\n\t\tdefault:\n\t\t\treturn state\n\t}\n\t\n}\n\n/* Actions */\nexport const displayAlert = (data) => async(dispatch) => {\n\tdispatch({\n\t\ttype: ERROR_OPEN,\n\t\tpayload: data\n\t})\n}\n\nexport const hideAlert = () => async(dispatch) => {\n\tdispatch({\n\t\ttype: ERROR_CLOSE\n\t})\n}\n","/* Imports */\r\nimport OBSWebSocket from \"obs-websocket-js\";\r\nconst obs = new OBSWebSocket();\r\n\r\nimport { FetchScenes, getSourcesList } from './scenesDucks'\r\nimport { FetchScenePreview } from './scenePreviewDucks'\r\nimport { getRecordingStats, RECORDING_STATS_STOP } from './RecordingDucks'\r\nimport { STREAMING_STATS, STREAMING_STOP } from './streamStatusDucks'\r\nimport { displayAlert } from './alertDucks'\r\n/* Action types */\r\nexport const OBS_CONNECT = \"OBS_CONNECT\";\r\nexport const OBS_DISCONNECT = \"OBS_DISCONNECT\";\r\nexport const OBS_ERROR = \"OBS_ERROR\";\r\n\r\nlet isRecording\r\n\r\n/* Reducers */\r\nexport default function ObsReducer(\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\tisConnected: false,\r\n\t\terror: null\r\n\t},\r\n\taction\r\n) {\r\n\tswitch (action.type) {\r\n\t\tcase OBS_CONNECT:\r\n\t\t\treturn { ...state, isLoading: false, isConnected: true, error: null };\r\n\r\n\t\tcase OBS_DISCONNECT:\r\n\t\t\treturn { ...state, isLoading: false, isConnected: false, error: null };\r\n\r\n\t\tcase OBS_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tisConnected: false,\r\n\t\t\t\terror: action.payload.message\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n/* Action Creators */\r\nexport const Connect = (address) => async (dispatch) => {\r\n\ttry {\r\n\t\tobs.connect({ address: `${address}:4444` }).then((e) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBS_CONNECT\r\n\t\t\t})\t\t\r\n\t\t\t\r\n\t\t\tdispatch(FetchScenes(obs))\r\n\t\t\tdispatch(FetchScenePreview(obs))\r\n\t\t\tobs.send('GetRecordingStatus').then( res => {\r\n\t\t\t\tif(res.isRecording) {\r\n\t\t\t\t\tisRecording = setInterval(() => dispatch(getRecordingStats(obs)), 1000)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobs.on('RecordingStarted', () => {\r\n\t\t\t\tif (!isRecording) {\r\n\t\t\t\t\tisRecording = setInterval(() => dispatch(getRecordingStats(obs)), 1000)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobs.on('RecordingStopped', () => {\r\n\t\t\t\tclearInterval(isRecording)\r\n\t\t\t\tisRecording = undefined\r\n\t\t\t\tdispatch({type: RECORDING_STATS_STOP})\r\n\t\t\t})\r\n\t\t\tobs.on('StreamStatus', res => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: STREAMING_STATS,\r\n\t\t\t\t\tpayload: res\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t})\r\n\t\t\tobs.on('StreamStopped', () => {\r\n\t\t\t\tdispatch({type: STREAMING_STOP})\r\n\t\t\t\tconsole.log('stream stop')\r\n\t\t\t})\r\n\t\t\tobs.on('ConnectionClosed', () => {\r\n\t\t\t\tdispatch(displayAlert({title: 'Disconnected', description: 'The connection has been closed', icon:'warning'}))\r\n\t\t\t\tdispatch({type: OBS_DISCONNECT})\r\n\t\t\t})\r\n\t\t\tobs.on('error', (e) => {\r\n\t\t\t\tdispatch(displayAlert({title:e.error, description:e.description, icon:'error'}))\r\n\t\t\t})\r\n\t\t}).catch( e => {\r\n\t\t\tconsole.log(e)\r\n\t\t\tdispatch(displayAlert({title:e.error, description:e.description, icon:'error'}))\r\n\t\t\treturn e\r\n\t\t})\r\n\t} catch (e) {\t\t\r\n\t\tconsole.log('Catched on Connect function'+e);\r\n\t\tdispatch({\r\n\t\t\ttype: OBS_ERROR,\r\n\t\t\tpayload: e\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const Disconnect = () => async (dispatch) => {\r\n\ttry {\r\n\t\tobs.disconnect()\r\n\t\tdispatch({type: OBS_DISCONNECT})\r\n\t} catch (e){\r\n\t\tconsole.log('Catched on Disconnect function'+e)\r\n\t\tdispatch({\r\n\t\t\ttype: OBS_ERROR,\r\n\t\t\tpayload: e.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const setCurrentScene = (name) => async(dispatch) => {\r\n\ttry {\r\n\t\tawait obs.send('SetCurrentScene', {'scene-name': name})\r\n\t\t\t\t.then(e => console.log(e))\r\n\t} catch(e){\r\n\t\tconsole.log('Catched on setCurrentScene function'+e)\r\n\t}\r\n}\r\n\r\nexport const startStopRecording = () => async (dispatch) => {\r\n\ttry{\r\n\t\tawait obs.send('StartStopRecording')\r\n\t} catch (e) {\r\n\t\tconsole.log('catched on startStopRecording function '+e)\r\n\t}\r\n}\r\n\r\nexport const startStopStreaming = () => async (dispatch) => {\r\n\ttry {\r\n\t\tawait obs.send('StartStopStreaming')\r\n\t} catch (e) {\r\n\t\tconsole.log('Catched on startStopStreaming function'+e)\r\n\t}\r\n}\r\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from 'redux-logger'\r\nimport obsReducer from \"./connectDucks\";\r\nimport scenesReducer from \"./scenesDucks\"\r\nimport previewReducer from './scenePreviewDucks'\r\nimport recordingReducer from './RecordingDucks'\r\nimport streamingReducer from './streamStatusDucks'\r\nimport alertReducer from './alertDucks'\r\n\r\nconst rootReducer = combineReducers({\r\n\tobsReducer: obsReducer,\r\n\tscenesReducer: scenesReducer,\r\n\tpreviewReducer: previewReducer,\r\n\trecordingReducer: recordingReducer,\r\n\tstreamReducer: streamingReducer,\r\n\talertReducer: alertReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function GenerateStore() {\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk, logger))\r\n  );\r\n  return store;\r\n}\r\n","import React from 'react'\nimport { Notification } from 'react-rainbow-components'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { hideAlert } from '../redux/alertDucks'\n\nexport const Alerts = () => {\n\tconst alerts = useSelector(store => store.alertReducer)\n\tconst dispatch = useDispatch()\n\tif (alerts && alerts.isOpen) {\n\t\treturn (\n\t\t\t<Notification\n\t\t\t\tclassName='alert'\n\t\t\t\ttitle={alerts.data.title}\n\t\t\t\tdescription={alerts.data.description}\n\t\t\t\ticon={alerts.data.icon}\n\t\t\t\tonRequestClose={() => dispatch(hideAlert())}\n\t\t\t/>\n\t\t)\n\t} else {\n\t\treturn null\n\t}\n}\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Card, Button, ButtonIcon, Input, Avatar } from 'react-rainbow-components'\r\nimport { Alerts } from '../components/Notification'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCog, faPlug } from '@fortawesome/free-solid-svg-icons'\r\nimport { displayAlert } from '../redux/alertDucks'\r\nimport { Connect } from \"../redux/connectDucks\";\r\n\r\nexport const LoginView = () => {\r\n\tconst [address, setAddress] = useState('');\r\n\tconst dispatch = useDispatch();\r\n\tconst handleConnection = () => {\r\n\t\tdispatch(Connect(address))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='d-flex flex-column justify-content-center vh-100 align-items-center'>\r\n\t\t\t<Alerts />\r\n\t\t\t<Card \r\n\t\t\t\tclassName='w-50'\r\n\t\t\t\ttitle='Establish Connection'\r\n\t\t\t\ticon={<Avatar variant='success' icon={<FontAwesomeIcon icon={faPlug} />} />}\r\nactions={<ButtonIcon onClick={() => dispatch(displayAlert({title: 'Soon', description: 'Here you will have the option to choose a color theme but still a work in progress', icon: 'info'}))} variant='neutral' icon={<FontAwesomeIcon icon={faCog}/>} />}\r\n\t\t\t>\r\n\t\t\t<div className='w-100 d-flex flex-column align-items-center'>\r\n\t\t\t\t<div className='w-50 d-flex flex-column margin-3'>\r\n\t\t\t\t\t<Input className='address-input' value={address} isCentered label='Host address' onChange={e => setAddress(e.target.value)} /> \r\n\t\t\t\t\t<Button variant='brand' onClick={handleConnection}>Connect</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { VisualPicker, VisualPickerOption, Spinner, Card } from 'react-rainbow-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPhotoVideo } from '@fortawesome/free-solid-svg-icons'\nimport { setCurrentScene } from '../redux/connectDucks'\n\nexport const ScenesComponents = () => {\n\tconst data = useSelector(store => store.scenesReducer.data)\n\tconst [pickerValue, setPickerValue ] = useState('')\n\tconst dispatch = useDispatch()\n\tconst handlePickerValue = (value) => {\n\t\tsetPickerValue(value)\n\t\tdispatch(setCurrentScene(value))\n\t}\n\n\tuseEffect(() => {\n\t\tsetPickerValue(data.currentScene)\t\n\t}, [data])\n\n\tif (data.scenes === undefined) {\n\t\treturn <Spinner size='large' type='arc' variant='brand'/> \n\t} else {\n\treturn(\n\t\t\t<div className='h-100 overflow-auto'>\n\t\t\t\t<VisualPicker \n\t\t\t\t\tid='visual-picker'\t\n\t\t\t\t\tvalue={pickerValue}\n\t\t\t\t\tonChange={handlePickerValue}\n\t\t\t\t\tclassName='overflow-auto'\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tdata.scenes.map((scene, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<VisualPickerOption key={index} name={scene.name}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon style={{marginBottom: '0.25em'}} icon={faPhotoVideo} size='3x' />\n\t\t\t\t\t\t\t\t\t{scene.name}\n\t\t\t\t\t\t\t\t</VisualPickerOption>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</VisualPicker>\n\n\t\t\t</div>\n\t)\n\t\n\t}\n}\n","import React from 'react'\nimport { Card, Spinner } from 'react-rainbow-components'\nimport { useSelector } from 'react-redux'\n\n\nexport const PreviewComponent = () => {\n\n\tconst image = useSelector(store => store.previewReducer)\n\n\n\tif (image.isLoading){\n\t\treturn <Spinner size='large' variant='brand' type='arc' />\n\t\n\t} else if (image.error) {\n\t\treturn <h3>{image.error.description}</h3>\n\t} else {\n\t\treturn(\n\t\t\t<div className='d-flex flex-column justify-content-center align-items-center'>\n\t\t\t\t<img className='prev-img' src={image.image.img} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport { startStopRecording } from '../redux/connectDucks'\nimport { Card, Button } from 'react-rainbow-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDotCircle, faCircle, faStopCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const RecordingComponent = () => {\n\tconst stats = useSelector(store =>  store.recordingReducer)\n\tconst dispatch = useDispatch()\n \n\tif (stats.data && stats.data.isRecording) {\n\t\treturn(\t\n\t\t\t<div className='flex-grow-1'>\n\t\t\t\t<p><FontAwesomeIcon icon={faCircle} className='breathingAnimation margin-r-05' style={{color: 'red'}}/> Recording </p>\n\t\t\t\t<p>Time: {stats.data.recordTimecode}</p>\n\t\t\t\t<p>Filename: { stats.data.recordingFilename.slice(stats.data.recordingFilename.lastIndexOf('/')+1, stats.data.recordingFilename.length) }</p>\n\t\t\t\t<p>File Path: { stats.data.recordingFilename.slice(0, stats.data.recordingFilename.lastIndexOf('/')+1) }</p>\t\n\t\t\t\t<Button variant='destructive' onClick={() => dispatch(startStopRecording())}> \n\t\t\t\t\t<FontAwesomeIcon icon={faStopCircle} className='margin-r-1'/>\n\t\t\t\t\tStop recording\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\t\n\t} else {\n\t\treturn(\n\t\t\t<div className='d-flex flex-column flex-grow-1 align-items-center justify-content-center'>\n\t\t\t\t<Button onClick={() => dispatch(startStopRecording())} variant='brand'>\n\t\t\t\t\t<FontAwesomeIcon icon={faDotCircle} className='margin-r-1' />\n\t\t\t\t\tStart recording\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { startStopStreaming } from '../redux/connectDucks'\nimport { Button, ProgressBar, ProgressCircular } from 'react-rainbow-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSatelliteDish, faStopCircle } from '@fortawesome/free-solid-svg-icons'\n\n/*\nData to use:\nfps\nkbitsPerSec\nmemoryUsage\nnumDroppedFrames\nnumTotalFrames\nstreamTimecode\ncpuUsage\n*/\n\nexport const StreamingComponent = () => {\n\tconst stats = useSelector(store => store.streamReducer)\n\tconst dispatch = useDispatch()\n\n\tif (stats && stats.data.fps) {\n\t\t\n\t\treturn(\n\t\t\t<div className='d-flex flex-column justify-content-center align-items-center flex-grow-1 w-100'>\t\n\t\t\t\t<p>\n\t\t\t\t\t<FontAwesomeIcon icon={faSatelliteDish} className='margin-r-05 breathingAnimation' style={{color: 'red'}} />\n\t\t\t\t\tLive now\t\n\t\t\t\t</p>\n\t\t\t\t<div className='d-flex flex-row justify-content-between align-items-between w-100'>\n\t\t\t\t\t<div className='text-left stats'>\n\t\t\t\t\t\t<p>FPS: {Math.floor(stats.data.fps)}</p>\n\t\t\t\t\t\t<p>Streaming time: {stats.data.streamTimecode}</p>\n\t\t\t\t\t\t<p>Bitrate: {stats.data.kbitsPerSec}kb/s</p>\n\t\t\t\t\t\t<p>Skiped Frames: {stats.data.numDroppedFrames}/{stats.data.numTotalFrames}</p>\n\t\t\t\t\t\t<p>Memory: {parseFloat(stats.data.memoryUsage).toFixed(2)}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ProgressCircular value={parseFloat(stats.data.cpuUsage).toFixed(1)} />\t\n\t\t\t\t\t\t<p>CPU ussage</p>\n\t\t\t\t\t</div>\n\t\t\n\t\t\t\t</div>\n\t\t\t\t<Button variant='destructive' onClick={() => dispatch(startStopStreaming())}>\n\t\t\t\t\t<FontAwesomeIcon icon={faStopCircle} className='margin-r-1' />\n\t\t\t\t\tStop Streaming\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div className='d-flex flex-column flex-grow-1 align-items-center justify-content-center'>\n\t\t\t\t<Button variant='brand' onClick={ () => dispatch(startStopStreaming()) }>\n\t\t\t\t\t<FontAwesomeIcon className='margin-r-1' icon={faSatelliteDish} />\n\t\t\t\t\tStart Sreaming\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport {Button} from 'react-rainbow-components'\nimport { useDispatch } from 'react-redux'\nimport { Disconnect } from '../redux/connectDucks.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nexport const SettingsComponent = () => {\n\tconst dispatch = useDispatch()\n\treturn(\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<img src=\"icon.png\" alt=\"obs icon\" style={{width:'150px', height:'auto'}} />\n\t\t\t\t<h2>OBS remote controller</h2>\n\t\t\t\t<p>Developed by <a href=\"https://github.com/wilsoft-gt\" target=\"_blank\">wilsoft-gt</a></p>\n\t\t\t\t<p>You can check the source code on <a href=\"https://github.com/wilsoft-gt/OBSWebController\" target=\"_blank\">here</a></p>\n\t\t\t</div>\t\t\n\t\t\t<div>\n\t\t\t\t<h2>Theme chooser will be here</h2>\n\t\t\t</div>\n\t\t\t<Button variant='destructive' onClick={() => dispatch(Disconnect())}>\n\t\t\t\t<FontAwesomeIcon icon={faTimesCircle} className='margin-r-05' />\n\t\t\t\tDisconnect\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n","import React, {useState, useEffect} from 'react'\nimport { ScenesComponents } from '../components/ScenesList'\nimport { PreviewComponent } from '../components/Preview'\nimport { RecordingComponent } from '../components/RecordingComponent'\nimport { StreamingComponent } from '../components/StreamingComponent'\nimport { SettingsComponent } from '../components/SettingsComponent'\nimport { Tabset, Tab, Card, ButtonIcon, Avatar, Button, Modal } from 'react-rainbow-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSatelliteDish, faDotCircle, faPhotoVideo, faCog } from '@fortawesome/free-solid-svg-icons'\nimport { Alerts } from '../components/Notification'\nimport { useDispatch } from 'react-redux'\n\nexport const ControllerView = () => {\n\twindow.onResize = (e) => console.log(e)\n\n\tconst dispatch = useDispatch()\n\tconst [screenWidth, setScreenWidth ] = useState(window.innerWidth)\n\tconst [tabSelection, setTabSelection] = useState('stream')\n\tconst [isSettingsOpen, setSettingsOpen] = useState(false)\n\n\n\tconst getTabContent = () => {\n\t\treturn {'stream': <StreamingComponent />,\n\t\t\t'record': <RecordingComponent />,\n\t\t\t'scenes': <ScenesComponents />\n\t\t\t}[tabSelection]\n\t} \n\n\tuseEffect( () => {\n\t\twindow.addEventListener('resize', (e) =>{\n\t\t\tsetScreenWidth(window.innerWidth)\n\t\t})\n\t}, [])\n\n\treturn(\t\n\t\t<Card\n\t\ticon={\n\t\tscreenWidth > 768 ? <Avatar size='small' src='icon.png' /> : null\n\t\t}\n\t\ttitle={screenWidth > 768 ? 'Connected' : null}\n\t\tactions={ screenWidth > 768 ?\n\t\t<Button variant='success' size='small' onClick={() => setSettingsOpen(true)}>\n\t\t\t<FontAwesomeIcon className='margin-r-05' icon={faCog} />\n\t\t\tSettings\n\t\t\t</Button> : null\n\t\t\t}\n\t\t\tclassName='d-flex flex-column flex-grow-1 vh-100'\n\t\t>\t\n\t\t\t<Alerts />\n\t\t\t<Modal \n\t\t\t\tisOpen={isSettingsOpen} \n\t\t\t\tonRequestClose={() => setSettingsOpen(false)} \n\t\t\t\ttitle='Settings'\n\t\t\t\ticon={<FontAwesomeIcon icon={faCog} />}\n\t\t\t>\n\t\t\t\t\t<SettingsComponent />\n\t\t\t\t</Modal>\n\t\t\t\t<PreviewComponent />\n\t\t\t\t<div className='d-flex flex-grow-1 overflow-auto'> \n\t\t\t\t\t{screenWidth > 768 ?\n\t\t\t\t\t<Card title='Choose the scene' className='w-50'> \n\t\t\t\t\t\t<ScenesComponents />\n\t\t\t\t\t\t</Card> : '' }\n\n\t\t\t\t\t\t<Card className='d-flex flex-column justify-content-center align-items center w-50 flex-grow-1'>\n\n\t\t\t\t\t\t\t<Tabset\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tclassName='w-100'\n\t\t\t\t\t\t\tvariant='line'\n\t\t\t\t\t\t\tid='tabset'\n\t\t\t\t\t\t\tonSelect={ (e, selected) => setTabSelection(selected) }\n\t\t\t\t\t\t\tactiveTabName={tabSelection}\n\t\t\t\t\t\t> \n\t\t\t\t\t\t\t{screenWidth < 768 ?\n\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tname='scenes'\n\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t<span> \n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPhotoVideo} /> Scenes\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\tname='stream'\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSatelliteDish} /> Stream\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Tab \n\t\t\t\t\t\t\t\t\tname='record'\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t<span> \n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faDotCircle} /> Record\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t</Tabset>\n\t\t\t\t\t\t\t\t{getTabContent()}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{ screenWidth < 768 ?\n\t\t\t\t\t\t<ButtonIcon className='settingsButton' variant='success' icon={<FontAwesomeIcon icon={faCog} onClick={() => setSettingsOpen(!isSettingsOpen)} />} />: \n\t\t\t\t\t\t\tnull \n\t\t\t\t\t\t}\n\t\t</Card>\t\n\t)\t\n}\n","import React from 'react'\nimport { LoginView } from './LoginView'\nimport { ControllerView } from './ControlerView'\nimport { useSelector } from 'react-redux'\n\nexport const MainView = () => {\n\tconst connection = useSelector(store => store.obsReducer)\n\tif (!connection.isConnected) {\n\t\treturn <LoginView />\n\t} else {\n\t\treturn <ControllerView />\n\t}\n}\n","import \"./styles.css\";\nimport GenerateStore from \"./redux/configureStore\";\nimport { Provider } from \"react-redux\";\n\nimport { MainView } from './views/Main'\n\nexport default function App() {\n  const store = GenerateStore();\n  return (\n    <Provider store={store}>\n      <MainView />\n    </Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}